poisson.model2 <- glm(Def1 ~ site_pos + depth_m + season, ftc_dat, family = poisson(link = "log"))
summary(poisson.model)
summary(poisson.model2)
# Plotting
# Install the package jtools if not already installed
install.packages("jtools")
# you may be asked to install 'broom' and 'ggstance' packages as well
install.packages("broom")
install.packages("ggstance")
# Include jtools library
library(jtools)
# plot regression coefficients for poisson.model2
plot_summs(poisson.model2, scale = TRUE, exp = TRUE)
cat_plot(poisson.model2, pred = site_pos, modx = season)
# Include jtools library
library(jtools)
cat_plot(poisson.model2, pred = site_pos, modx = season)
library(ggplot2)
library(ggstance)
library(broom)
cat_plot(poisson.model2, pred = site_pos, modx = season)
library(interactions)
installed.packages("interactions")
library(interactions)
installed.packages("interactions")
library(interactions)
library("interactions")
library(ggplot2)
cat_plot(poisson.model2, pred = site_pos, modx = season)
interact_plot(poisson.model2, pred = site_pos, modx = season)
install.packages("interactions")
library(interactions)
cat_plot(poisson.model2, pred = site_pos, modx = season)
cat_plot(poisson.model2, pred = site_pos, modx = season) +
labs (title = "FTC Poisson Regression")
cat_plot(poisson.model2, pred = site_pos, modx = season) +
labs (title = "FTC Poisson Regression", +
xlab = "Site", +
ylab = "FTC factor")
cat_plot(poisson.model2, pred = site_pos, modx = season) +
labs (title = "FTC Poisson Regression") +
(xlab = "Site") +
(ylab = "FTC factor")
cat_plot(poisson.model2, pred = site_pos, modx = season) +
labs (title = "FTC Poisson Regression") +
xlab("Site") +
ylab("FTC factor")
# generalized linear models general structure
poisson.model3 <- glm(Def1 ~ site_pos + depth_m, ftc_dat, family = poisson(link = "log"))
summary(poisson.model3)
# generalized linear models general structure
poisson.model3 <- glm(Def1 ~ site_pos + depth_pos, ftc_dat, family = poisson(link = "log"))
summary(poisson.model3)
activelayer_dat = read.csv("processed/activelayer_8172020.csv")
activelayer_dat = read.csv("processed/activelayer_8172020.csv")
ggplot(activelayer_dat, aes(x = site, y = activelayer, color = site)) +
geom_bar() +
scale_y_continuous() +
scale_y_reverse +
scale_x_continuous(position = "top")
p -> ggplot(activelayer_dat, aes(x = site, y = activelayer, color = site)) +
geom_bar()
p
p = ggplot(activelayer_dat, aes(x = site, y = activelayer, color = site)) +
geom_bar()
p
p = ggplot(activelayer_dat, aes(x = site, y = activelayer, color = site))
p
p = ggplot(activelayer_dat, aes(x = site, y = activelayer, color = site)) +
geom_dotplot()
p
p = ggplot(activelayer_dat, aes(x = site, y = activelayer, color = site, fill = site)) +
geom_dotplot()
p
p + scale_y_continuous() + scale_y_reverse + scale_x_continuous(position = "top")
p + scale_y_reverse
p + scale_y_reverse()
p = ggplot(activelayer_dat, aes(x = site, y = activelayer, color = site, fill = site)) +
geom_dotplot()
p
al_dat = activelayer_dat$activelayer
p = ggplot(al_dat, aes(x = site, y = activelayer, color = site, fill = site)) +
geom_dotplot()
p
p = ggplot(al_dat, aes(x = site, y = activelayer, color = site, fill = site)) +
geom_area()
p
p = ggplot(al_dat, aes(x = site, y = activelayer, color = site, fill = site)) +
geom_barh()
p = ggplot(al_dat, aes(x = site, y = activelayer, color = site, fill = site)) +
geom_barh()
p
p + facet_grid(. ~ site)
p = ggplot(activelayer_dat, aes(x = site, y = activelayer, color = site, fill = site)) +
geom_barh()
p
p + facet_grid(. ~ site)
p = ggplot(activelayer_dat, aes(x = site, y = activelayer, color = site, fill = site)) +
GeomBar
p
p = ggplot(activelayer_dat, aes(y = activelayer, color = site, fill = site)) +
GeomBar
p
p + facet_grid(. ~ site)
plot(site, activelayer)
plot("site", "activelayer")
plot(activelayer_dat)
activelayer_temp = read.csv("activelayer_dat.csv")
library(readr)
activelayer_dat <- read_csv("processed/activelayer_dat.csv")
View(activelayer_dat)
activelayer_temp = read.csv("activelayer_dat.csv")
read(activelayer_dat)
plot(activelayer_dat)
#load library
library(ggplot2)
p <- ggplot() +
geom_bar(data = activelayer_dat, aes(y=Def1, x=depth_m, color=site.pos)) +
scale_y_continuous(trans = "reverse", breaks = (activelayer_dat$Def1))
p + facet_grid(. ~ site.pos)
p <- ggplot() +
geom_line(data = activelayer_dat, aes(y=Def1, x=depth_m, color=site.pos)) +
scale_y_continuous(trans = "reverse", breaks = (activelayer_dat$Def1))
p + facet_grid(. ~ site.pos)
p <- ggplot() +
geom_line(data = activelayer_dat, aes(x = depth_m, y = Def1, color=site.pos)) +
scale_y_continuous(trans = "reverse", breaks = (activelayer_dat$Def1))
p + facet_grid(. ~ site.pos)
p <- ggplot() +
geom_bar(data = activelayer_dat, aes(x = depth_m, y = Def1, color=site.pos)) +
scale_y_continuous(trans = "reverse", breaks = (activelayer_dat$Def1))
p + facet_grid(. ~ site.pos)
p <- ggplot() +
geom_bar(data = activelayer_dat, aes(x = depth_m, y = Def1, color = site.pos)) +
scale_y_continuous(trans = "reverse", breaks = (activelayer_dat$Def1))
p + facet_grid(. ~ site.pos)
p <- ggplot() +
geom_bar(data = activelayer_dat, aes(x = depth_m, y = Def1, color = site.pos)) +
scale_y_continuous(trans = "reverse", breaks = (activelayer_dat$Def1))
p
p <- ggplot() +
geom_bar(data = activelayer_dat, aes(x = depth_m, y = Def1, color = site_pos)) +
scale_y_continuous(trans = "reverse", breaks = (activelayer_dat$Def1))
p
p + facet_grid(. ~ site_pos)
p <- ggplot() +
geom_bar(data = activelayer_dat, aes(y = Def1, x = depth_m, color = site_pos)) +
scale_y_continuous(trans = "reverse", breaks = (activelayer_dat$Def1))
p
p <- ggplot() +
geom_line(data = activelayer_dat, aes(y = Def1, x = depth_m, color = site_pos)) +
scale_y_continuous(trans = "reverse", breaks = (activelayer_dat$Def1))
p
p + facet_grid(. ~ site_pos)
p <- ggplot() +
geom_line(data = activelayer_dat, aes(x = depth_m, y = Def1, color = site_pos)) +
scale_y_continuous(trans = "reverse", breaks = (activelayer_dat$Def1))
p
p + facet_grid(. ~ site_pos)
p <- ggplot() +
geom_line(data = activelayer_dat, aes(x = depth_m, y = Def1, color = site_pos)) +
scale_y_continuous(trans = "reverse", breaks = (activelayer_dat$depth_m))
p
p + facet_grid(. ~ site_pos)
p <- ggplot() +
geom_line(data = activelayer_dat, aes(x = Def1, y = depth_m, color = site_pos)) +
scale_y_continuous(trans = "reverse", breaks = (activelayer_dat$depth_m))
p
p + facet_grid(. ~ site_pos)
p <- ggplot() +
geom_line(data = activelayer_dat, aes(x = Def1, y = depth_m, color = site_pos)) +
# scale_y_continuous(trans = "reverse", breaks = (activelayer_dat$depth_m))
p
p + facet_grid(. ~ site_pos)
p <- ggplot() +
geom_line(data = activelayer_dat, aes(x = Def1, y = depth_m, color = site_pos)) +
# scale_y_continuous(trans = "reverse", breaks = (activelayer_dat$depth_m))
p
p + facet_grid(. ~ site_pos)
p <- ggplot() +
geom_line(data = activelayer_dat, aes(x = Def1, y = depth_m, color = site_pos)) +
scale_y_reverse()
p
p + facet_grid(. ~ site_pos)
anova(poisson.model2)
ghg_csv = read.csv("processed/ghg_ftc.csv")
# ggplot set up-----------------------------------
theme_er <- function() {  # this for all the elements common across plots
theme_bw() %+replace%
theme(legend.position = "top",
legend.key=element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 12),
legend.key.size = unit(1.5, 'lines'),
panel.border = element_rect(color="black",size=2, fill = NA),
plot.title = element_text(hjust = 0.5, size = 14),
plot.subtitle = element_text(hjust = 0.5, size = 12, lineheight = 1.5),
axis.text = element_text(size = 12, color = "black"),
axis.title = element_text(size = 12, face = "bold", color = "black"),
# formatting for facets
panel.background = element_blank(),
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
panel.spacing.y = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold", angle = 270) #facet labels
)
}
library(soilpalettes)
library(ggplot2)
str(ghg_csv)
levels(as.factor(ghg_csv$FTC))
str(ghg_csv)
str(ghg_csv)
str(ghg_csv)
levels(as.factor(ghg_csv$TRT))
str(ghg_csv)
mutate(trmt = factor(trmt, levels = c("CON", "FTC")))
###
library(dplyr)
str(ghg_csv)
levels(as.factor(ghg_csv$TRT))
mutate(trmt = factor(trmt, levels = c("CON", "FTC")))
levels(as.factor(ghg_csv$TRT))
mutate(TRT = factor(TRT, levels = c("CON", "FTC")))
str(ghg_csv)
###
library(dplyr)
library(tidyr)
str(ghg_csv)
levels(as.factor(ghg_csv$TRT))
mutate(TRT = factor(TRT, levels = c("CON", "FTC")))
str(ghg_csv)
levels(as.factor(ghg_csv$TRT))
mutate(TRT = factor(TRT, levels = c("CON", "FTC")))
# load data---------------------------------
ghg_csv = read.csv("processed/ghg_ftc.csv")
###
library(dplyr)
library(tidyr)
str(ghg_csv)
levels(as.factor(ghg_csv$TRT))
str(ghg_csv)
# ggplot set up-----------------------------------
theme_er <- function() {  # this for all the elements common across plots
theme_bw() %+replace%
theme(legend.position = "top",
legend.key=element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 12),
legend.key.size = unit(1.5, 'lines'),
panel.border = element_rect(color="black",size=2, fill = NA),
plot.title = element_text(hjust = 0.5, size = 14),
plot.subtitle = element_text(hjust = 0.5, size = 12, lineheight = 1.5),
axis.text = element_text(size = 12, color = "black"),
axis.title = element_text(size = 12, face = "bold", color = "black"),
# formatting for facets
panel.background = element_blank(),
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
panel.spacing.y = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold", angle = 270) #facet labels
)
}
library(ggplot2)
library(soilpalettes)
ggplot(ghg_csv, aes(x=TRT, y=ug_12C_g_soil, fill=DAY)) + geom_boxplot() + theme_er + scale_fill_manual = soil_palette("redox, 4")
ggplot(ghg_csv, aes(x=Site, y=ug_12C_g_soil, fill=DAY)) + geom_boxplot()
ggplot(ghg_csv, aes(x=Site, y=ug_12C_g_soil, fill=DAY)) + geom_boxplot() + theme_er + scale_fill_manual = soil_palette("redox, 4")
a = ggplot(ghg_csv, aes(x=Site, y=ug_12C_g_soil, fill=DAY)) + geom_boxplot()
a + theme_er + scale_fill_manual = soil_palette("redox, 4")
ggplot(ghg_csv, aes(x=TRT, y=ug_12C_g_soil, fill=DAY)) + geom_boxplot() + theme_er + scale_fill_manual = soil_palette("redox",
4)
ggplot(ghg_csv, aes(x=TRT, y=ug_12C_g_soil, fill=DAY)) + geom_boxplot() + theme_er() + scale_fill_manual = soil_palette("redox",
4)
ggplot(ghg_csv, aes(x=TRT, y=ug_12C_g_soil, fill=DAY)) +
geom_boxplot() + theme_er() +
scale_fill_manual = soil_palette("redox", 4)
ggplot(ghg_csv, aes(x=TRT, y=ug_12C_g_soil, fill=DAY)) +
geom_boxplot() + theme_er() +
scale_fill_manual (values = soil_palette("redox", 4))
ggplot(ghg_csv, aes(x=SITE, y=ug_12C_g_soil, fill=DAY)) +
geom_boxplot() + theme_er() +
scale_fill_manual (values = soil_palette("redox", 4)) +
labs
ggplot(ghg_csv, aes(x=SITE, y=ug_12C_g_soil, fill=DAY)) +
geom_boxplot() + theme_er() +
scale_fill_manual (values = soil_palette("redox", 4))
levels(as.factor(ghg_csv$SITE))
ggplot(ghg_csv, aes(x=SITE, y=ug_12C_g_soil, fill=DAY)) +
geom_boxplot() + theme_er() +
scale_fill_manual (values = soil_palette("redox", 4))
str(ghg_csv)
ggplot(ghg_csv, aes(x=Site, y=ug_12C_g_soil, fill=DAY)) +
geom_boxplot() + theme_er() +
scale_fill_manual (values = soil_palette("redox", 4))
ggplot(ghg_csv, aes(x=Site, y=ug_12C_g_soil, fill=DAY)) +
geom_dotplot() + theme_er() +
scale_fill_manual (values = soil_palette("redox", 4))
ggplot(ghg_csv, aes(x=Site, y=ug_12C_g_soil, fill=DAY)) +
geom_line() + theme_er() +
scale_fill_manual (values = soil_palette("redox", 4))
ggplot(ghg_csv, aes(x=Site, y=ug_12C_g_soil, fill=DAY)) +
geom_boxplot() + theme_er() +
scale_fill_manual (values = soil_palette("redox", 4))
ggplot(ghg_csv, aes(x = Site, y = ug_12C_g_soil, color = DAY)) +
geom_line() +
xlab("Day") +
ylab("CO2 AVG") +
ggtitle("12C")
ggplot(ghg_csv, aes(x = variable, y = ug_12C_g_soil, color = DAY)) +
geom_line() +
xlab("Day") +
ylab("CO2 AVG") +
ggtitle("12C")
ggplot(ghg_csv, aes(x = DAY, y = ug_12C_g_soil, color = Site)) +
geom_line() +
xlab("Day") +
ylab("CO2 AVG") +
ggtitle("12C")
ggplot(ghg_csv, aes(x = DAY, y = ug_12C_g_soil, color = Site)) +
geom_dotplot() +
xlab("Day") +
ylab("CO2 AVG") +
ggtitle("12C")
ghg_csv2 = read.csv("processed/ghg_depth.csv")
str(ghg_csv2)
levels(as.factor(ghg_csv2$trmt))
# ggplot set up-----------------------------------
theme_er <- function() {  # this for all the elements common across plots
theme_bw() %+replace%
theme(legend.position = "top",
legend.key=element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 12),
legend.key.size = unit(1.5, 'lines'),
panel.border = element_rect(color="black",size=2, fill = NA),
plot.title = element_text(hjust = 0.5, size = 14),
plot.subtitle = element_text(hjust = 0.5, size = 12, lineheight = 1.5),
axis.text = element_text(size = 12, color = "black"),
axis.title = element_text(size = 12, face = "bold", color = "black"),
# formatting for facets
panel.background = element_blank(),
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
panel.spacing.y = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold", angle = 270) #facet labels
)
}
library(ggplot2)
library(soilpalettes)
ftc_dat = read.csv("finaldat.csv")
ftc_dat = read.csv("final_dat.csv")
ftc_dat = read.csv("processed/FTC_quant_inprocess.csv")
###
library(dplyr)
library(tidyr)
str(ftc_dat)
# ggplot set up-----------------------------------
theme_er <- function() {  # this for all the elements common across plots
theme_bw() %+replace%
theme(legend.position = "top",
legend.key=element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 12),
legend.key.size = unit(1.5, 'lines'),
panel.border = element_rect(color="black",size=2, fill = NA),
plot.title = element_text(hjust = 0.5, size = 14),
plot.subtitle = element_text(hjust = 0.5, size = 12, lineheight = 1.5),
axis.text = element_text(size = 12, color = "black"),
axis.title = element_text(size = 12, face = "bold", color = "black"),
# formatting for facets
panel.background = element_blank(),
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
panel.spacing.y = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold", angle = 270) #facet labels
)
}
library(ggplot2)
library(soilpalettes)
ggplot(ftc_dat, aes(x = Def1, y = depth_m, fill = site)) + geom_boxplot() + theme_er() +
scale_fill_manual (values = soil_palette("gley", 2)) + facet_wrap(season~.)
ggplot(ftc_dat, aes(x = Def1, y = depth_m, fill = site)) + geom_area() + theme_er() +
scale_fill_manual (values = soil_palette("gley", 2)) + facet_wrap(season~.)
ggplot(ftc_dat, aes(x = Def1, y = depth_m, fill = site)) + geom_bar() + theme_er() +
scale_fill_manual (values = soil_palette("gley", 2)) + facet_wrap(season~.)
ggplot(ftc_dat, aes(x = Def1, y = depth_m, fill = site)) + geom_count() + theme_er() +
scale_fill_manual (values = soil_palette("gley", 2)) + facet_wrap(season~.)
ggplot(ftc_dat, aes(x = Def1, y = depth_m, fill = site)) + geom_col() + theme_er() +
scale_fill_manual (values = soil_palette("gley", 2)) + facet_wrap(season~.)
ggplot(ftc_dat, aes(x = Def1, y = depth_m, fill = site)) + geom_crossbar() + theme_er() +
scale_fill_manual (values = soil_palette("gley", 2)) + facet_wrap(season~.)
ggplot() + geom_crossbar(data = ftc_dat, aes(y = depth_m, x = Def1, color = site)) + theme_er() +
scale_fill_manual (values = soil_palette("gley", 2)) + facet_wrap(season~.)
ggplot() + geom_line(data = ftc_dat, aes(y = depth_m, x = Def1, color = site)) + theme_er() +
scale_fill_manual (values = soil_palette("gley", 2)) + facet_wrap(season~.)
ggplot() + geom_line(data = ftc_dat, aes(y = depth_m, x = Def1, color = site)) + theme_er() +
scale_color_manual (values = soil_palette("gley", 2)) + facet_wrap(season~.)
ggplot() + geom_dotplot(data = ftc_dat, aes(y = depth_m, x = Def1, color = site)) + theme_er() +
scale_color_manual (values = soil_palette("gley", 2)) + facet_wrap(season~.)
ggplot() + geom_dotplot(data = ftc_dat, aes(y = depth_m, x = Def1, color = site)) + theme_er() +
scale_color_manual (values = soil_palette("gley", 2)) + facet_wrap(season~.)
library(aqp)
install.packages("aqp")
library(sp)
library(soilDB)
library(aqp)
library(sharpshootR)
library(sp)
plotTransect(ftc_dat, grad.var.name = Def1, grad.axis.title = 'Freeze Thaw', label='season', color = Def1)
plotTransect(ftc_dat, grad.var.name = 'Def1', grad.axis.title = 'Freeze Thaw', label='season', color = 'Def1')
library(ggplot2)
library(soilpalettes)
library(soilDB)
library(aqp)
library(sharpshootR)
library(sp)
# load sample data
data("loafercreek")
str("loafercreek")
# load sample data
data("loafercreek")
# keep first 10 profiles
x <- loafercreek[1:10, ]
# default margins are too wide, make smaller
par(mar=c(1,1,2,1))
# profile sketches
plot(x, label='pedon_id', id.style='side')
library
library
library
library(ggplot2)
library(soilpalettes)
library(soilDB)
library(aqp)
library(sharpshootR)
library(sp)
# load sample data
data("loafercreek")
# keep first 10 profiles
x <- loafercreek[1:10, ]
# default margins are too wide, make smaller
par(mar=c(1,1,2,1))
# profile sketches
plot(x, label='pedon_id', id.style='side')
ftc_dat = read.csv("processed/FTC_quant_inprocess.csv")
###
library(dplyr)
library(tidyr)
str(ftc_dat)
# ggplot set up-----------------------------------
theme_er <- function() {  # this for all the elements common across plots
theme_bw() %+replace%
theme(legend.position = "top",
legend.key=element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 12),
legend.key.size = unit(1.5, 'lines'),
panel.border = element_rect(color="black",size=2, fill = NA),
plot.title = element_text(hjust = 0.5, size = 14),
plot.subtitle = element_text(hjust = 0.5, size = 12, lineheight = 1.5),
axis.text = element_text(size = 12, color = "black"),
axis.title = element_text(size = 12, face = "bold", color = "black"),
# formatting for facets
panel.background = element_blank(),
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
panel.spacing.y = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold", angle = 270) #facet labels
)
}
library(ggplot2)
library(soilpalettes)
library(soilDB)
library(aqp)
library(sharpshootR)
library(sp)
# gain in C ggplot----------------------------------------
ggplot(ghg_csv, aes(x=TRT, y=gain_ug_per_gOC, fill=DAY)) + geom_boxplot()
plot(Def1, label=season, id.style='side')
plot('Def1', label=season, id.style='side')
plot('Def1', label='season', id.style='side')
x1 <- ftc_dat$site==HEAL
x1 <- ftc_dat$site==HEALY
x1 <- ftc_dat$site=="HEAL"
par(mar=c(4.5,1,3,1))
plot(x1, color='Def1', plot.order=new.order, print.id=FALSE)
new.order <- order(ftc_dat$season)
plot(x1, color='Def1', plot.order=new.order, print.id=FALSE)
new.order <- order(ftc_dat$season)
x1 <- ftc_dat$site=="HEAL"
par(mar=c(4.5,1,3,1))
plot(x1, color='Def1', plot.order=new.order, print.id=FALSE)
new.order <- order(ftc_dat$season)
x <- ftc_dat$site=="HEAL"
par(mar=c(4.5,1,3,1))
plot(x, color='Def1', plot.order=new.order, print.id=FALSE)
new.order <- order(ftc_dat$depth_m)
x <- ftc_dat$site=="HEAL"
par(mar=c(4.5,1,3,1))
plot(x, color='Def1', plot.order=new.order, print.id=FALSE)
new.order <- order(ftc_dat$depth_cm)
new.order <- order(ftc_dat$season)
x <- ftc_dat$site=="HEAL"
par(mar=c(4.5,1,3,1))
plot(x, color='def1', plot.order=new.order, print.id=FALSE)
data(ftc_dat$season)
