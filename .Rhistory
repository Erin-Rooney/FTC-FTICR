# vector of 6 colors
colors <- c("Red", "Blue", "Gold", "Black", "Pink", "Green")
ftc_dat = read.csv("processed/final_dat.csv")
ftc_count = final_dat$Def1
ftc_count = ftc_dat$Def1
# install.packages("datasets")
library(datasets) # include library datasets after installation
# generalized linear models general structure
glm(formula, family = familytype(link = "log"), data = ftc_count,...)
# generalized linear models general structure
glm(formula, family = familytype(link = "log"), data = ftc_count)
# generalized linear models general structure
poisson.model <- glm(breaks ~ season + site_pos + depth_m, data = ftc_count, family = poisson(link = "log"))
# generalized linear models general structure
poisson.model <- glm(breaks ~ season + site_pos + depth_m, ftc_count, family = poisson(link = "log"))
# generalized linear models general structure
poisson.model <- glm(breaks ~ site_pos + depth_m, ftc_count, family = poisson(link = "log"))
# generalized linear models general structure
poisson.model <- glm(Def1 ~ site_pos + depth_m, ftc_count, family = poisson(link = "log"))
# generalized linear models general structure
poisson.model <- glm(Def1 ~ site_pos + depth_m, ftc_dat, family = poisson(link = "log"))
summary()
summary(poisson.model)
# generalized linear models general structure
poisson.model2 <- glm(Def1 ~ site_pos + depth_m + season, ftc_dat, family = poisson(link = "log"))
summary(poisson.model)
summary(poisson.model2)
# Plotting
# Install the package jtools if not already installed
install.packages("jtools")
# you may be asked to install 'broom' and 'ggstance' packages as well
install.packages("broom")
install.packages("ggstance")
# Include jtools library
library(jtools)
# plot regression coefficients for poisson.model2
plot_summs(poisson.model2, scale = TRUE, exp = TRUE)
cat_plot(poisson.model2, pred = site_pos, modx = season)
# Include jtools library
library(jtools)
cat_plot(poisson.model2, pred = site_pos, modx = season)
library(ggplot2)
library(ggstance)
library(broom)
cat_plot(poisson.model2, pred = site_pos, modx = season)
library(interactions)
installed.packages("interactions")
library(interactions)
installed.packages("interactions")
library(interactions)
library("interactions")
library(ggplot2)
cat_plot(poisson.model2, pred = site_pos, modx = season)
interact_plot(poisson.model2, pred = site_pos, modx = season)
install.packages("interactions")
library(interactions)
cat_plot(poisson.model2, pred = site_pos, modx = season)
cat_plot(poisson.model2, pred = site_pos, modx = season) +
labs (title = "FTC Poisson Regression")
cat_plot(poisson.model2, pred = site_pos, modx = season) +
labs (title = "FTC Poisson Regression", +
xlab = "Site", +
ylab = "FTC factor")
cat_plot(poisson.model2, pred = site_pos, modx = season) +
labs (title = "FTC Poisson Regression") +
(xlab = "Site") +
(ylab = "FTC factor")
cat_plot(poisson.model2, pred = site_pos, modx = season) +
labs (title = "FTC Poisson Regression") +
xlab("Site") +
ylab("FTC factor")
# generalized linear models general structure
poisson.model3 <- glm(Def1 ~ site_pos + depth_m, ftc_dat, family = poisson(link = "log"))
summary(poisson.model3)
# generalized linear models general structure
poisson.model3 <- glm(Def1 ~ site_pos + depth_pos, ftc_dat, family = poisson(link = "log"))
summary(poisson.model3)
activelayer_dat = read.csv("processed/activelayer_8172020.csv")
activelayer_dat = read.csv("processed/activelayer_8172020.csv")
ggplot(activelayer_dat, aes(x = site, y = activelayer, color = site)) +
geom_bar() +
scale_y_continuous() +
scale_y_reverse +
scale_x_continuous(position = "top")
p -> ggplot(activelayer_dat, aes(x = site, y = activelayer, color = site)) +
geom_bar()
p
p = ggplot(activelayer_dat, aes(x = site, y = activelayer, color = site)) +
geom_bar()
p
p = ggplot(activelayer_dat, aes(x = site, y = activelayer, color = site))
p
p = ggplot(activelayer_dat, aes(x = site, y = activelayer, color = site)) +
geom_dotplot()
p
p = ggplot(activelayer_dat, aes(x = site, y = activelayer, color = site, fill = site)) +
geom_dotplot()
p
p + scale_y_continuous() + scale_y_reverse + scale_x_continuous(position = "top")
p + scale_y_reverse
p + scale_y_reverse()
p = ggplot(activelayer_dat, aes(x = site, y = activelayer, color = site, fill = site)) +
geom_dotplot()
p
al_dat = activelayer_dat$activelayer
p = ggplot(al_dat, aes(x = site, y = activelayer, color = site, fill = site)) +
geom_dotplot()
p
p = ggplot(al_dat, aes(x = site, y = activelayer, color = site, fill = site)) +
geom_area()
p
p = ggplot(al_dat, aes(x = site, y = activelayer, color = site, fill = site)) +
geom_barh()
p = ggplot(al_dat, aes(x = site, y = activelayer, color = site, fill = site)) +
geom_barh()
p
p + facet_grid(. ~ site)
p = ggplot(activelayer_dat, aes(x = site, y = activelayer, color = site, fill = site)) +
geom_barh()
p
p + facet_grid(. ~ site)
p = ggplot(activelayer_dat, aes(x = site, y = activelayer, color = site, fill = site)) +
GeomBar
p
p = ggplot(activelayer_dat, aes(y = activelayer, color = site, fill = site)) +
GeomBar
p
p + facet_grid(. ~ site)
plot(site, activelayer)
plot("site", "activelayer")
plot(activelayer_dat)
activelayer_temp = read.csv("activelayer_dat.csv")
library(readr)
activelayer_dat <- read_csv("processed/activelayer_dat.csv")
View(activelayer_dat)
activelayer_temp = read.csv("activelayer_dat.csv")
read(activelayer_dat)
plot(activelayer_dat)
#load library
library(ggplot2)
p <- ggplot() +
geom_bar(data = activelayer_dat, aes(y=Def1, x=depth_m, color=site.pos)) +
scale_y_continuous(trans = "reverse", breaks = (activelayer_dat$Def1))
p + facet_grid(. ~ site.pos)
p <- ggplot() +
geom_line(data = activelayer_dat, aes(y=Def1, x=depth_m, color=site.pos)) +
scale_y_continuous(trans = "reverse", breaks = (activelayer_dat$Def1))
p + facet_grid(. ~ site.pos)
p <- ggplot() +
geom_line(data = activelayer_dat, aes(x = depth_m, y = Def1, color=site.pos)) +
scale_y_continuous(trans = "reverse", breaks = (activelayer_dat$Def1))
p + facet_grid(. ~ site.pos)
p <- ggplot() +
geom_bar(data = activelayer_dat, aes(x = depth_m, y = Def1, color=site.pos)) +
scale_y_continuous(trans = "reverse", breaks = (activelayer_dat$Def1))
p + facet_grid(. ~ site.pos)
p <- ggplot() +
geom_bar(data = activelayer_dat, aes(x = depth_m, y = Def1, color = site.pos)) +
scale_y_continuous(trans = "reverse", breaks = (activelayer_dat$Def1))
p + facet_grid(. ~ site.pos)
p <- ggplot() +
geom_bar(data = activelayer_dat, aes(x = depth_m, y = Def1, color = site.pos)) +
scale_y_continuous(trans = "reverse", breaks = (activelayer_dat$Def1))
p
p <- ggplot() +
geom_bar(data = activelayer_dat, aes(x = depth_m, y = Def1, color = site_pos)) +
scale_y_continuous(trans = "reverse", breaks = (activelayer_dat$Def1))
p
p + facet_grid(. ~ site_pos)
p <- ggplot() +
geom_bar(data = activelayer_dat, aes(y = Def1, x = depth_m, color = site_pos)) +
scale_y_continuous(trans = "reverse", breaks = (activelayer_dat$Def1))
p
p <- ggplot() +
geom_line(data = activelayer_dat, aes(y = Def1, x = depth_m, color = site_pos)) +
scale_y_continuous(trans = "reverse", breaks = (activelayer_dat$Def1))
p
p + facet_grid(. ~ site_pos)
p <- ggplot() +
geom_line(data = activelayer_dat, aes(x = depth_m, y = Def1, color = site_pos)) +
scale_y_continuous(trans = "reverse", breaks = (activelayer_dat$Def1))
p
p + facet_grid(. ~ site_pos)
p <- ggplot() +
geom_line(data = activelayer_dat, aes(x = depth_m, y = Def1, color = site_pos)) +
scale_y_continuous(trans = "reverse", breaks = (activelayer_dat$depth_m))
p
p + facet_grid(. ~ site_pos)
p <- ggplot() +
geom_line(data = activelayer_dat, aes(x = Def1, y = depth_m, color = site_pos)) +
scale_y_continuous(trans = "reverse", breaks = (activelayer_dat$depth_m))
p
p + facet_grid(. ~ site_pos)
p <- ggplot() +
geom_line(data = activelayer_dat, aes(x = Def1, y = depth_m, color = site_pos)) +
# scale_y_continuous(trans = "reverse", breaks = (activelayer_dat$depth_m))
p
p + facet_grid(. ~ site_pos)
p <- ggplot() +
geom_line(data = activelayer_dat, aes(x = Def1, y = depth_m, color = site_pos)) +
# scale_y_continuous(trans = "reverse", breaks = (activelayer_dat$depth_m))
p
p + facet_grid(. ~ site_pos)
p <- ggplot() +
geom_line(data = activelayer_dat, aes(x = Def1, y = depth_m, color = site_pos)) +
scale_y_reverse()
p
p + facet_grid(. ~ site_pos)
anova(poisson.model2)
