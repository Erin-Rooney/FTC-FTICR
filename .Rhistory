# Assemble reports------------------------------
fticr_report =
report %>%
# filter appropriate mass range
filter(Mass>200 & Mass<900) %>%
# remove isotopes
filter(C13==0) %>%
# remove peaks without C assignment
filter(C>0)
library(ggmap)
bs <- get_map(location = "Bering Sea", zoom = 4)
register_google
bs <- get_map(location = "Bering Sea", zoom = 4)
library(ggplot2)
library(maps)
library(mapdata)
library(mapproj)
ak<-map_data('worldHires','USA:Alaska')
ak<-map_data('worldHires','USA:Alaska')
ggplot()+geom_polygon(data=ak,aes(long,lat,group=group),fill=8,color="black")
ak<-map_data('worldHires','USA:Alaska')
# install.packages("devtools")
devtools::install_github("UrbanInstitute/urbnmapr")
library(tidyverse)
library(urbnmapr)
states_sf <- get_urbn_map("states", sf = TRUE)
states_sf %>%
ggplot(aes()) +
geom_sf(fill = "grey", color = "#ffffff")
states_sf %>%
filter(state_name == "Alaska") %>%
geom_sf(fill = "grey", color = "#ffffff")
states_sf %>%
filter(state_name == "Alaska") %>%
ggplot(aes())
geom_sf(fill = "grey", color = "#ffffff")
states_sf %>%
filter(state_name == "Alaska") %>%
ggplot(aes()) +
geom_sf(fill = "grey", color = "#ffffff")
probe_loc = read.csv("processed/Probe Locations.csv")
states_sf %>%
filter(state_name == "Alaska") %>%
ggplot(aes()) +
geom_sf(fill = "pink", color = "#ffffff")
states_sf %>%
filter(state_name == "Alaska") %>%
ggplot(aes(x = probe_loc$referenceLatitude, y = probe_loc$referenceLongitude, fill = black)) +
geom_sf(fill = "pink", color = "#ffffff")
states_sf %>%
filter(state_name == "Alaska") %>%
ggplot(aes()) +
geom_sf(fill = "pink", color = "#ffffff")
View(probe_loc)
sites <- data.frame(ID = c("BARR","TOOL", "BONA", "HEAL"),
x = c(71.28235, 68.66041, 65.15379, 63.87526),
y = c(-156.6189, -149.3701, -147.5042, -149.2143))
states_sf %>%
filter(state_name == "Alaska") %>%
ggplot(aes()) +
geom_sf(fill = "pink", color = "#ffffff") +
geom_point(data = sites, aes(x = x, y = y))
sites <- data.frame(ID = c("BARR","TOOL", "BONA", "HEAL"),
x = c(51.28235, 48.66041, 45.15379, 43.87526),
y = c(-136.6189, -129.3701, -127.5042, -129.2143))
states_sf %>%
filter(state_name == "Alaska") %>%
ggplot(aes()) +
geom_sf(fill = "pink", color = "#ffffff") +
geom_point(data = sites, aes(x = x, y = y))
states_sf %>%
filter(state_name == "Alaska") %>%
ggplot(aes()) +
geom_sf(fill = "pink", color = "#ffffff") +
geom_point(data = sites, aes(x = x, y = y))
states_sf <- get_urbn_map("states", sf = TRUE)
states_sf %>%
ggplot(aes()) +
geom_sf(fill = "grey", color = "#ffffff")
library(fiftystater)
library(sf)
install.packages("fiftystater")
USA <- usa_composite(proj="laea")  # creates map projection
USA_MAP <- tidy(USA, region="name")
install.packages("albersusa")
################
library(fiftystater)
install.packages("usmap")
library(usmap)
usmap::plot_usmap("sttes, labels = TRUE")
usmap::plot_usmap("states", labels = TRUE)
usmap::plot_usmap("states", labels = TRUE) %>%
filter(state_name=="Alaska")
sites2 <- data.frame(ID = c("BARR","TOOL", "BONA", "HEAL"),
x = c(21.28235, 18.66041, 15.15379, 13.87526),
y = c(-116.6189, -109.3701, -107.5042, -109.2143))
states_sf %>%
filter(state_name == "Alaska") %>%
ggplot(aes()) +
geom_sf(fill = "pink", color = "#ffffff") +
geom_point(data = sites2, aes(x = x, y = y))
sites2 <- data.frame(ID = c("BARR","TOOL", "BONA", "HEAL"),
x = c(21.28235, 18.66041, 15.15379, 13.87526),
y = c(116.6189, 109.3701, 107.5042, 109.2143))
states_sf %>%
filter(state_name == "Alaska") %>%
ggplot(aes()) +
geom_sf(fill = "pink", color = "#ffffff") +
geom_point(data = sites2, aes(x = x, y = y))
# Load libraries-------------------------------
library(tidyverse)
library(reshape2)
# Load data------------------------------------
report = read.csv("processed/Lybrand Alaska Sept 2019 Report_Colorcoded.csv")
report2 = read.csv("processed/Lybrand Alaska CHCl3 Sept 2019 Report_Colorcoded.csv")
# Assemble reports------------------------------
fticr_report =
report %>%
# filter appropriate mass range
filter(Mass>200 & Mass<900) %>%
# remove isotopes
filter(C13==0) %>%
# remove peaks without C assignment
filter(C>0)
View(report)
names(report)
# Assemble reports------------------------------
fticr_report =
report %>%
rename(Mass=`ï..Mass`) %>%
# filter appropriate mass range
filter(Mass>200 & Mass<900) %>%
# remove isotopes
filter(C13==0) %>%
# remove peaks without C assignment
filter(C>0)
View(fticr_report)
fticr_meta =
fticr_report %>%
# select only the relevant columns for the formula assignments
dplyr::select(Mass:Candidates) %>%
# alternatively, use `starts_with()` if all your sample names start with the same prefix
# dplyr::select(-starts_with("FT")) %>%
# select only necessary columns
dplyr::select(Mass, C, H, O, N, S, P, El_comp, Class) %>%
# create columns for indices
dplyr::mutate(AImod = round((1+C-(0.5*O)-S-(0.5*(N+P+H)))/(C-(0.5*O)-S-N-P),4),
NOSC =  round(4-(((4*C)+H-(3*N)-(2*O)-(2*S))/C),4),
HC = round(H/C,2),
OC = round(O/C,2)) %>%
# create column/s for formula
# first, create columns for individual elements
# then, combine
dplyr::mutate(formula_c = if_else(C>0,paste0("C",C),as.character(NA)),
formula_h = if_else(H>0,paste0("H",H),as.character(NA)),
formula_o = if_else(O>0,paste0("O",O),as.character(NA)),
formula_n = if_else(N>0,paste0("N",N),as.character(NA)),
formula_s = if_else(S>0,paste0("S",S),as.character(NA)),
formula_p = if_else(P>0,paste0("P",P),as.character(NA)),
formula = paste0(formula_c,formula_h, formula_o, formula_n, formula_s, formula_p),
formula = str_replace_all(formula,"NA","")) %>%
dplyr::select(Mass, formula, El_comp, Class, HC, OC, AImod, NOSC, C:P)
View(report2)
fticr_report2 =
report %>%
rename(Mass=`ï..Mass`) %>%
filter(Mass>200 & Mass<900) %>%
filter(C13==0) %>%
filter(C>0)
fticr_meta2 =
fticr_report2 %>%
# select only the relevant columns for the formula assignments
dplyr::select(Mass:Candidates) %>%
# alternatively, use `starts_with()` if all your sample names start with the same prefix
# dplyr::select(-starts_with("FT")) %>%
# select only necessary columns
dplyr::select(Mass, C, H, O, N, S, P, El_comp, Class) %>%
# create columns for indices
dplyr::mutate(AImod = round((1+C-(0.5*O)-S-(0.5*(N+P+H)))/(C-(0.5*O)-S-N-P),4),
NOSC =  round(4-(((4*C)+H-(3*N)-(2*O)-(2*S))/C),4),
HC = round(H/C,2),
OC = round(O/C,2)) %>%
# create column/s for formula
# first, create columns for individual elements
# then, combine
dplyr::mutate(formula_c = if_else(C>0,paste0("C",C),as.character(NA)),
formula_h = if_else(H>0,paste0("H",H),as.character(NA)),
formula_o = if_else(O>0,paste0("O",O),as.character(NA)),
formula_n = if_else(N>0,paste0("N",N),as.character(NA)),
formula_s = if_else(S>0,paste0("S",S),as.character(NA)),
formula_p = if_else(P>0,paste0("P",P),as.character(NA)),
formula = paste0(formula_c,formula_h, formula_o, formula_n, formula_s, formula_p),
formula = str_replace_all(formula,"NA","")) %>%
dplyr::select(Mass, formula, El_comp, Class, HC, OC, AImod, NOSC, C:P)
# subset of meta for HC/OC only, for Van Krevelen diagrams
meta_hcoc2 =
fticr_meta2 %>%
dplyr::select(Mass, formula, HC, OC)
# subset of meta for HC/OC only, for Van Krevelen diagrams
meta_hcoc =
fticr_meta %>%
dplyr::select(Mass, formula, HC, OC)
fticr_data =
fticr_report %>%
# select only the relevant columns for the formula assignments
dplyr::select(-c(C:Candidates)) %>%
# alternatively, use `starts_with()` if all your sample names start with the same prefix
# dplyr::select(Mass,starts_with("FT")) %>%
melt(id = c("Mass"), value.name = "presence", variable.name = "CoreID") %>%
# convert intensities to presence==1/absence==0
dplyr::mutate(presence = if_else(presence>0,1,0)) %>%
# keep only peaks present
filter(presence>0) %>%
left_join(dplyr::select(fticr_meta, Mass,formula), by = "Mass")  %>%
#left_join(corekey, by = "CoreID") %>%
# rearrange columns
dplyr::select(-Mass,-formula, -presence,Mass,formula,presence)
fticr_data2 =
fticr_report2 %>%
# select only the relevant columns for the formula assignments
dplyr::select(-c(C:Candidates)) %>%
# alternatively, use `starts_with()` if all your sample names start with the same prefix
# dplyr::select(Mass,starts_with("FT")) %>%
melt(id = c("Mass"), value.name = "presence", variable.name = "CoreID") %>%
# convert intensities to presence==1/absence==0
dplyr::mutate(presence = if_else(presence>0,1,0)) %>%
# keep only peaks present
filter(presence>0) %>%
left_join(dplyr::select(fticr_meta, Mass,formula), by = "Mass")  %>%
#left_join(corekey, by = "CoreID") %>%
# rearrange columns
dplyr::select(-Mass,-formula, -presence,Mass,formula,presence)
meta_formula =
fticr_meta %>%
dplyr::select(Mass, formula) %>%
group_by(formula) %>%
dplyr::mutate(n = n())
meta_formula2 =
fticr_meta2 %>%
dplyr::select(Mass, formula) %>%
group_by(formula) %>%
dplyr::mutate(n = n())
write.csv(fticr_data2,"fticr_data.csv2", row.names = FALSE)
write.csv(fticr_meta2,"fticr_meta.csv2", row.names = FALSE)
write.csv(meta_hcoc2,"fticr_meta_hcoc.csv2", row.names = FALSE)
write.csv(fticr_data2,"fticr_data2.csv", row.names = FALSE)
write.csv(fticr_meta2,"fticr_meta2.csv", row.names = FALSE)
write.csv(meta_hcoc2,"fticr_meta_hcoc2.csv", row.names = FALSE)
transformed_data <- usmap_transform(sites)
library(usmap)
transformed_data <- usmap_transform(sites)
library(ggplot2)
library(tidyverse)
probe_loc = read.csv("processed/Probe Locations.csv")
library(tidyverse)
library(urbnmapr)
library(usmap)
# install.packages("devtools")
devtools::install_github("UrbanInstitute/urbnmapr")
states_sf <- get_urbn_map("states", sf = TRUE)
states_sf %>%
ggplot(aes()) +
geom_sf(fill = "grey", color = "#ffffff")
sites <- data.frame(ID = c("BARR","TOOL", "BONA", "HEAL"),
x = c(71.28235, 68.66041, 65.15379, 63.87526),
y = c(-156.6189, -149.3701, -147.5042, -149.2143))
transformed_data <- usmap_transform(sites)
probe_loc = read.csv("processed/site_locations.csv")
sites <- data.frame(lon = c(-156.6189, -149.3701, -147.5042, -149.2143), lat = c(71.28235, 68.66041, 65.15379, 63.87526))
transformed_data <- usmap_transform(sites)
states_sf %>%
filter(state_name == "Alaska") %>%
ggplot(aes()) +
geom_sf(fill = "pink", color = "#ffffff") +
geom_point(data = sites, aes(x = x, y = y))
states_sf %>%
filter(state_name == "Alaska") %>%
ggplot(aes()) +
geom_sf(fill = "pink", color = "#ffffff") +
geom_point(data = sites, aes(x, y))
states_sf %>%
filter(state_name == "Alaska") %>%
ggplot(aes()) +
geom_sf(fill = "pink", color = "#ffffff") +
geom_point(data = sites, aes(x = lat, y = lon))
knitr::opts_chunk$set(dpi = 300,
echo=FALSE,message=FALSE,warning=FALSE,
collapse = TRUE,
comment = "#>"
)
library(ggplot2)
library(usmap)
sites <- data.frame(lon = c(-156.6189, -149.3701, -147.5042, -149.2143), lat = c(71.28235, 68.66041, 65.15379, 63.87526))
transformed_data <- usmap_transform(sites)
plot_usmap(color = "pink") +
geom_point(data = transformed_data,
aes(x = lon.1, y = lat.1),
color = "black",
size = 2.5)+
annotate("text", label = "Secret River (SR)", x = -1686856, y = 411954.3, size=2, hjust="left")+
annotate("text", label = "Caribou Poker Creeks Research Watershed\n(CPCRW)", x = -1051020, y = -1842646.7,
size=2, hjust="left")+
NULL
sites <- data.frame(lon = c(-156.6189, -149.3701, -147.5042, -149.2143), lat = c(71.28235, 68.66041, 65.15379, 63.87526))
sites <- data.frame(lon = c(-156.6189, -149.3701, -147.5042, -149.2143), lat = c(71.28235, 68.66041, 65.15379, 63.87526))
transformed_data <- usmap_transform(sites)
plot_usmap(color = "pink") +
geom_point(data = transformed_data,
aes(x = lon.1, y = lat.1),
color = "black",
size = 2.5)+
#annotate("text", label = "Barrow", x = -1686856, y = 411954.3, size=2, hjust="left")+
#annotate("text", label = "Bona", x = -1051020, y = -1842646.7,
#size=2, hjust="left")+
#NULL
library(usmap)
plot_usmap(color = "pink") +
geom_point(data = transformed_data,
aes(x = lon.1, y = lat.1),
color = "black",
size = 2.5)+
#annotate("text", label = "Barrow", x = -1686856, y = 411954.3, size=2, hjust="left")+
#annotate("text", label = "Bona", x = -1051020, y = -1842646.7,
#size=2, hjust="left")+
#NULL
library(usmap)
plot_usmap(color = "pink") +
geom_point(data = transformed_data,
aes(x = lon.1, y = lat.1),
color = "black",
size = 2.5)
View(states_sf)
plot_usmap(color = "pink") %>%
filter(state_name == "Alaska") %>%
geom_point(data = transformed_data,
aes(x = lon.1, y = lat.1),
color = "black",
size = 2.5)
plot_usmap(color = "black") %>%
filter(state_name == "Alaska") %>%
geom_point(data = transformed_data,
aes(x = lon.1, y = lat.1),
color = "pink",
size = 2.5)
plot_usmap(color = "black") %>%
filter(state_name == "Alaska") +
geom_point(data = transformed_data,
aes(x = lon.1, y = lat.1),
color = "pink",
size = 2.5)
plot_usmap(color = "black") +
geom_point(data = transformed_data,
aes(x = lon.1, y = lat.1),
color = "pink",
size = 2.5)
library(usmap)
usmap::plot_usmap("states", labels = TRUE)
usmap::plot_usmap(regions=c("Alaska"))
usmap::plot_usmap(regions=c("state"))
usmap::plot_usmap(regions=c("Alaska"))
usmap::plot_usmap(regions=c("states")) %>%
filter("Alaska")
sites <- data.frame(lon = c(-156.6189, -149.3701, -147.5042, -149.2143), lat = c(71.28235, 68.66041, 65.15379, 63.87526))
transformed_data <- usmap_transform(sites)
plot_usmap(color = "black") +
geom_point(data = transformed_data,
aes(x = lon.1, y = lat.1),
color = "pink",
size = 2.5)
sites <- data.frame(lon = c(-156.6189, -149.3701, -147.5042, -149.2143), lat = c(71.28235, 68.66041, 65.15379, 63.87526))
transformed_data <- usmap_transform(sites)
plot_usmap(color = "black") +
geom_point(data = transformed_data,
aes(x = lon.1, y = lat.1),
color = "pink",
size = 2.5)
library(usmap)
#title: "AK-Map"
#author: "Anna Talucci"
#date: "1/22/2020"
#output: html_document
---
library(leaflet)
install.packages("leaflet")
install.packages("DT")
#title: "AK-Map"
#author: "Anna Talucci"
#date: "1/22/2020"
#output: html_document
---
library(leaflet)
library(dplyr)
library(tidyr)
library(ggplot2)
library(DT)
library(sp)
library(sf)
library(ggmap) # devtools::install_github("dkahle/ggmap")
library(ggrepel)
library(RStoolbox)
install.packages("RStoolbox")
library(RStoolbox)
library(raster)
library(rgdal)
library(RColorBrewer)
library(cowplot)
library(ggspatial)
library(maps)
# Trying to create bound box but it depends on projection
- UL -159.2085, 71.3877
- UR -153.6549, 71.3877
- LR -153.6549, 70.3104
- LL -159.2085, 70.3104
```{r eval=FALSE, include=FALSE}
(insetrect <- data.frame(xmin = -153.6549, xmax = -159.2085,
ymin = 70.3104, ymax = 71.3877))
```
```{r eval=FALSE, include=FALSE}
proj_ak_shape = "+proj=longlat +datum=NAD83 +no_defs"
```
```{r eval=FALSE, include=FALSE}
proj4string(insetrect) <-CRS("+proj=longlat +datum=NAD83 +no_defs")
```
Utqiavik, AK (AKA Barrow, AK)
```{r eval=FALSE, include=FALSE}
labs <- tibble(
long = c(-156.7886),
lat = c(71.2906),
names = ("Utqiagvik"))
```
## As SF object (Plays nice with ggplot)
```{r}
ak_sf <- st_read(
"../data/AK-state/GU_StateOrTerritory.shp")
```
```{r}
st_crs(ak_sf)
```
```{r}
ak_ee = st_transform(ak_sf, CRS( "+proj=laea +lat_0=90 +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs"))
```
```{r}
ak_sf_eeak = st_transform(ak_sf, CRS( "+proj=aea +lat_1=55 +lat_2=65 +lat_0=50 +lon_0=-154 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs"))
```
```{r}
ak_sp = readOGR("../data/AK-state/GU_StateOrTerritory.shp", "GU_StateOrTerritory")
```
```{r}
plot(ak_sp)
```
### Tasnforming rpojection for SP
```{r}
ak_sp_ee = spTransform(ak_sp, CRS( "+proj=laea +lat_0=90 +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs"))
```
+proj=aea +lat_1=55 +lat_2=65 +lat_0=50 +lon_0=-154 +x_0=0 +y_0=0 +ellps=GRS80 +datum=NAD83 +units=m +no_defs
```{r}
ak_sp_3338 = spTransform(ak_sp, CRS( "+proj=aea +lat_1=55 +lat_2=65 +lat_0=50 +lon_0=-154 +x_0=0 +y_0=0 +ellps=GRS80 +datum=NAD83 +units=m +no_defs"))
```
+proj=aea +lat_1=55 +lat_2=65 +lat_0=50 +lon_0=-154 +x_0=0 +y_0=0 +ellps=GRS80 +datum=NAD83 +units=m +no_defs
+proj=aea +lat_1=55 +lat_2=65 +lat_0=50 +lon_0=-154 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs
```{r}
ak_sp_eeak = spTransform(ak_sp, CRS( "+proj=aea +lat_1=55 +lat_2=65 +lat_0=50 +lon_0=-154 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs"))
```
```{r}
ak_sp_wgs84 = spTransform(ak_sp, CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"))
plot(ak_sp_wgs84)
```
```{r}
plot(ak_sp_ee)
```
EPSG 3338 NAD83 / Alaska Albers
```{r}
plot(ak_sp_3338)
```
Alaska Albers Equal Area Conic
```{r}
plot(ak_sp_eeak)
UL -159.2085, 71.3877
UR -153.6549, 71.3877
LR -153.6549, 70.3104
LL -159.2085, 70.3104
(insetrect <- data.frame(xmin = -153.6549, xmax = -159.2085,
ymin = 70.3104, ymax = 71.3877))
proj_ak_shape = "+proj=longlat +datum=NAD83 +no_defs"
proj4string(insetrect) <-CRS("+proj=longlat +datum=NAD83 +no_defs")
proj4string(insetrect) <-CRS("+proj=longlat +datum=NAD83 +no_defs")
Utqiavik, AK (AKA Barrow, AK)
labs <- tibble(
long = c(-156.7886),
lat = c(71.2906),
names = ("Utqiagvik"))
```
probe_loc = read.csv("processed/site_locations.csv")
library(tidyverse)
library(urbnmapr)
library(usmap)
library(ggplot2)
library(tidyverse)
knitr::opts_chunk$set(dpi = 300,
echo=FALSE,message=FALSE,warning=FALSE,
collapse = TRUE,
comment = "#>"
)
library(ggplot2)
library(usmap)
sites <- data.frame(lon = c(-156.6189, -149.3701, -147.5042, -149.2143), lat = c(71.28235, 68.66041, 65.15379, 63.87526))
transformed_data <- usmap_transform(sites)
plot_usmap(color = "black") +
geom_point(data = transformed_data,
aes(x = lon.1, y = lat.1),
color = "pink",
size = 2.5)
