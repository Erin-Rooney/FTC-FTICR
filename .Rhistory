a = ggplot(ghg_csv, aes(x=Site, y=ug_12C_g_soil, fill=DAY)) + geom_boxplot()
a + theme_er + scale_fill_manual = soil_palette("redox, 4")
ggplot(ghg_csv, aes(x=TRT, y=ug_12C_g_soil, fill=DAY)) + geom_boxplot() + theme_er + scale_fill_manual = soil_palette("redox",
4)
ggplot(ghg_csv, aes(x=TRT, y=ug_12C_g_soil, fill=DAY)) + geom_boxplot() + theme_er() + scale_fill_manual = soil_palette("redox",
4)
ggplot(ghg_csv, aes(x=TRT, y=ug_12C_g_soil, fill=DAY)) +
geom_boxplot() + theme_er() +
scale_fill_manual = soil_palette("redox", 4)
ggplot(ghg_csv, aes(x=TRT, y=ug_12C_g_soil, fill=DAY)) +
geom_boxplot() + theme_er() +
scale_fill_manual (values = soil_palette("redox", 4))
ggplot(ghg_csv, aes(x=SITE, y=ug_12C_g_soil, fill=DAY)) +
geom_boxplot() + theme_er() +
scale_fill_manual (values = soil_palette("redox", 4)) +
labs
ggplot(ghg_csv, aes(x=SITE, y=ug_12C_g_soil, fill=DAY)) +
geom_boxplot() + theme_er() +
scale_fill_manual (values = soil_palette("redox", 4))
levels(as.factor(ghg_csv$SITE))
ggplot(ghg_csv, aes(x=SITE, y=ug_12C_g_soil, fill=DAY)) +
geom_boxplot() + theme_er() +
scale_fill_manual (values = soil_palette("redox", 4))
str(ghg_csv)
ggplot(ghg_csv, aes(x=Site, y=ug_12C_g_soil, fill=DAY)) +
geom_boxplot() + theme_er() +
scale_fill_manual (values = soil_palette("redox", 4))
ggplot(ghg_csv, aes(x=Site, y=ug_12C_g_soil, fill=DAY)) +
geom_dotplot() + theme_er() +
scale_fill_manual (values = soil_palette("redox", 4))
ggplot(ghg_csv, aes(x=Site, y=ug_12C_g_soil, fill=DAY)) +
geom_line() + theme_er() +
scale_fill_manual (values = soil_palette("redox", 4))
ggplot(ghg_csv, aes(x=Site, y=ug_12C_g_soil, fill=DAY)) +
geom_boxplot() + theme_er() +
scale_fill_manual (values = soil_palette("redox", 4))
ggplot(ghg_csv, aes(x = Site, y = ug_12C_g_soil, color = DAY)) +
geom_line() +
xlab("Day") +
ylab("CO2 AVG") +
ggtitle("12C")
ggplot(ghg_csv, aes(x = variable, y = ug_12C_g_soil, color = DAY)) +
geom_line() +
xlab("Day") +
ylab("CO2 AVG") +
ggtitle("12C")
ggplot(ghg_csv, aes(x = DAY, y = ug_12C_g_soil, color = Site)) +
geom_line() +
xlab("Day") +
ylab("CO2 AVG") +
ggtitle("12C")
ggplot(ghg_csv, aes(x = DAY, y = ug_12C_g_soil, color = Site)) +
geom_dotplot() +
xlab("Day") +
ylab("CO2 AVG") +
ggtitle("12C")
ghg_csv2 = read.csv("processed/ghg_depth.csv")
str(ghg_csv2)
levels(as.factor(ghg_csv2$trmt))
# ggplot set up-----------------------------------
theme_er <- function() {  # this for all the elements common across plots
theme_bw() %+replace%
theme(legend.position = "top",
legend.key=element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 12),
legend.key.size = unit(1.5, 'lines'),
panel.border = element_rect(color="black",size=2, fill = NA),
plot.title = element_text(hjust = 0.5, size = 14),
plot.subtitle = element_text(hjust = 0.5, size = 12, lineheight = 1.5),
axis.text = element_text(size = 12, color = "black"),
axis.title = element_text(size = 12, face = "bold", color = "black"),
# formatting for facets
panel.background = element_blank(),
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
panel.spacing.y = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold", angle = 270) #facet labels
)
}
library(ggplot2)
library(soilpalettes)
ftc_dat = read.csv("finaldat.csv")
ftc_dat = read.csv("final_dat.csv")
ftc_dat = read.csv("processed/FTC_quant_inprocess.csv")
###
library(dplyr)
library(tidyr)
str(ftc_dat)
# ggplot set up-----------------------------------
theme_er <- function() {  # this for all the elements common across plots
theme_bw() %+replace%
theme(legend.position = "top",
legend.key=element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 12),
legend.key.size = unit(1.5, 'lines'),
panel.border = element_rect(color="black",size=2, fill = NA),
plot.title = element_text(hjust = 0.5, size = 14),
plot.subtitle = element_text(hjust = 0.5, size = 12, lineheight = 1.5),
axis.text = element_text(size = 12, color = "black"),
axis.title = element_text(size = 12, face = "bold", color = "black"),
# formatting for facets
panel.background = element_blank(),
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
panel.spacing.y = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold", angle = 270) #facet labels
)
}
library(ggplot2)
library(soilpalettes)
ggplot(ftc_dat, aes(x = Def1, y = depth_m, fill = site)) + geom_boxplot() + theme_er() +
scale_fill_manual (values = soil_palette("gley", 2)) + facet_wrap(season~.)
ggplot(ftc_dat, aes(x = Def1, y = depth_m, fill = site)) + geom_area() + theme_er() +
scale_fill_manual (values = soil_palette("gley", 2)) + facet_wrap(season~.)
ggplot(ftc_dat, aes(x = Def1, y = depth_m, fill = site)) + geom_bar() + theme_er() +
scale_fill_manual (values = soil_palette("gley", 2)) + facet_wrap(season~.)
ggplot(ftc_dat, aes(x = Def1, y = depth_m, fill = site)) + geom_count() + theme_er() +
scale_fill_manual (values = soil_palette("gley", 2)) + facet_wrap(season~.)
ggplot(ftc_dat, aes(x = Def1, y = depth_m, fill = site)) + geom_col() + theme_er() +
scale_fill_manual (values = soil_palette("gley", 2)) + facet_wrap(season~.)
ggplot(ftc_dat, aes(x = Def1, y = depth_m, fill = site)) + geom_crossbar() + theme_er() +
scale_fill_manual (values = soil_palette("gley", 2)) + facet_wrap(season~.)
ggplot() + geom_crossbar(data = ftc_dat, aes(y = depth_m, x = Def1, color = site)) + theme_er() +
scale_fill_manual (values = soil_palette("gley", 2)) + facet_wrap(season~.)
ggplot() + geom_line(data = ftc_dat, aes(y = depth_m, x = Def1, color = site)) + theme_er() +
scale_fill_manual (values = soil_palette("gley", 2)) + facet_wrap(season~.)
ggplot() + geom_line(data = ftc_dat, aes(y = depth_m, x = Def1, color = site)) + theme_er() +
scale_color_manual (values = soil_palette("gley", 2)) + facet_wrap(season~.)
ggplot() + geom_dotplot(data = ftc_dat, aes(y = depth_m, x = Def1, color = site)) + theme_er() +
scale_color_manual (values = soil_palette("gley", 2)) + facet_wrap(season~.)
ggplot() + geom_dotplot(data = ftc_dat, aes(y = depth_m, x = Def1, color = site)) + theme_er() +
scale_color_manual (values = soil_palette("gley", 2)) + facet_wrap(season~.)
library(aqp)
install.packages("aqp")
library(sp)
library(soilDB)
library(aqp)
library(sharpshootR)
library(sp)
plotTransect(ftc_dat, grad.var.name = Def1, grad.axis.title = 'Freeze Thaw', label='season', color = Def1)
plotTransect(ftc_dat, grad.var.name = 'Def1', grad.axis.title = 'Freeze Thaw', label='season', color = 'Def1')
library(ggplot2)
library(soilpalettes)
library(soilDB)
library(aqp)
library(sharpshootR)
library(sp)
# load sample data
data("loafercreek")
str("loafercreek")
# load sample data
data("loafercreek")
# keep first 10 profiles
x <- loafercreek[1:10, ]
# default margins are too wide, make smaller
par(mar=c(1,1,2,1))
# profile sketches
plot(x, label='pedon_id', id.style='side')
library
library
library
library(ggplot2)
library(soilpalettes)
library(soilDB)
library(aqp)
library(sharpshootR)
library(sp)
# load sample data
data("loafercreek")
# keep first 10 profiles
x <- loafercreek[1:10, ]
# default margins are too wide, make smaller
par(mar=c(1,1,2,1))
# profile sketches
plot(x, label='pedon_id', id.style='side')
ftc_dat = read.csv("processed/FTC_quant_inprocess.csv")
###
library(dplyr)
library(tidyr)
str(ftc_dat)
# ggplot set up-----------------------------------
theme_er <- function() {  # this for all the elements common across plots
theme_bw() %+replace%
theme(legend.position = "top",
legend.key=element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 12),
legend.key.size = unit(1.5, 'lines'),
panel.border = element_rect(color="black",size=2, fill = NA),
plot.title = element_text(hjust = 0.5, size = 14),
plot.subtitle = element_text(hjust = 0.5, size = 12, lineheight = 1.5),
axis.text = element_text(size = 12, color = "black"),
axis.title = element_text(size = 12, face = "bold", color = "black"),
# formatting for facets
panel.background = element_blank(),
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
panel.spacing.y = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold", angle = 270) #facet labels
)
}
library(ggplot2)
library(soilpalettes)
library(soilDB)
library(aqp)
library(sharpshootR)
library(sp)
# gain in C ggplot----------------------------------------
ggplot(ghg_csv, aes(x=TRT, y=gain_ug_per_gOC, fill=DAY)) + geom_boxplot()
plot(Def1, label=season, id.style='side')
plot('Def1', label=season, id.style='side')
plot('Def1', label='season', id.style='side')
x1 <- ftc_dat$site==HEAL
x1 <- ftc_dat$site==HEALY
x1 <- ftc_dat$site=="HEAL"
par(mar=c(4.5,1,3,1))
plot(x1, color='Def1', plot.order=new.order, print.id=FALSE)
new.order <- order(ftc_dat$season)
plot(x1, color='Def1', plot.order=new.order, print.id=FALSE)
new.order <- order(ftc_dat$season)
x1 <- ftc_dat$site=="HEAL"
par(mar=c(4.5,1,3,1))
plot(x1, color='Def1', plot.order=new.order, print.id=FALSE)
new.order <- order(ftc_dat$season)
x <- ftc_dat$site=="HEAL"
par(mar=c(4.5,1,3,1))
plot(x, color='Def1', plot.order=new.order, print.id=FALSE)
new.order <- order(ftc_dat$depth_m)
x <- ftc_dat$site=="HEAL"
par(mar=c(4.5,1,3,1))
plot(x, color='Def1', plot.order=new.order, print.id=FALSE)
new.order <- order(ftc_dat$depth_cm)
new.order <- order(ftc_dat$season)
x <- ftc_dat$site=="HEAL"
par(mar=c(4.5,1,3,1))
plot(x, color='def1', plot.order=new.order, print.id=FALSE)
data(ftc_dat$season)
ghg_csv2 = read.csv("processed/ghg_depth.csv")
ftc_dat = read.csv("processed/FTC_quant_inprocess.csv")
###
library(dplyr)
library(tidyr)
str(ghg_csv2)
str(ftc_dat)
levels(as.factor(ghg_csv2$trmt))
str(ghg_csv2)
# ggplot set up-----------------------------------
theme_er <- function() {  # this for all the elements common across plots
theme_bw() %+replace%
theme(legend.position = "top",
legend.key=element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 12),
legend.key.size = unit(1.5, 'lines'),
panel.border = element_rect(color="black",size=2, fill = NA),
plot.title = element_text(hjust = 0.5, size = 14),
plot.subtitle = element_text(hjust = 0.5, size = 12, lineheight = 1.5),
axis.text = element_text(size = 12, color = "black"),
axis.title = element_text(size = 12, face = "bold", color = "black"),
# formatting for facets
panel.background = element_blank(),
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
panel.spacing.y = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold", angle = 270) #facet labels
)
}
library(ggplot2)
library(soilpalettes)
library(soilDB)
library(aqp)
library(sharpshootR)
library(sp)
ggplot(ftc_dat, aes(x = Def1, y = depth_m, fill = site)) + GeomBoxplot() + theme_er() +
scale_fill_manual (values = soil_palette("gley", 2)) + facet_wrap(season~.)
ggplot(ftc_dat, aes(x = Def1, y = depth_m, fill = site)) + GeomBoxplot() + theme_er() +
scale_fill_manual (values = soil_palette("gley", 2)) + facet_wrap(season~.)
ggplot(ftc_dat, aes(x = Def1, y = depth_m, fill = site)) + geom_boxplot() + theme_er() +
scale_fill_manual (values = soil_palette("gley", 2)) + facet_wrap(season~.)
ggplot(ftc_dat, aes(x = def1, y = depth_m, fill = site)) + geom_boxplot() + theme_er() +
scale_fill_manual (values = soil_palette("gley", 2)) + facet_wrap(season~.)
ggplot(ftc_dat, aes(x = def1, y = depth_cm, fill = site)) + geom_boxplot() + theme_er() +
scale_fill_manual (values = soil_palette("gley", 2)) + facet_wrap(season~.)
ggplot(ftc_dat, aes(x = def1, y = depth_cm, fill = site)) + geom_boxplot() + theme_er() +
scale_fill_manual (values = soil_palette("gley", 2)) + facet_grid(season~.)
ggplot(ftc_dat, aes(x = def1, y = depth_cm))
+ stat_bin2d( mapping = NULL, data = NULL, geom = "tile", position = "identity") + bins = 30 + binwidth = NULL + drop = TRUE +
+ na.rm = FALSE + show.legend = NA + inherit.aes = TRUE.
ggplot(ftc_dat, aes(x = def1, y = depth_cm)) +
stat_bin2d( mapping = NULL, data = NULL, geom = "tile", position = "identity") + bins = 30 + binwidth = NULL + drop = TRUE +
+ na.rm = FALSE + show.legend = NA + inherit.aes = TRUE.
ggplot(ftc_dat, aes(x = def1, y = depth_cm)) +
stat_bin2d( mapping = NULL, data = NULL, geom = "tile", position = "identity") + bins = 30 + binwidth = NULL + drop = TRUE +
+ na.rm = FALSE + show.legend = NA + inherit.aes = TRUE
ggplot(ftc_dat, aes(x = def1, y = depth_cm)) +
stat_bin2d( mapping = NULL, data = NULL, geom = "tile", position = "identity") + bins = 30 + binwidth = NULL + drop = TRUE +
+ na.rm = FALSE
ggplot(ftc_dat, aes(x = def1, y = depth_cm)) +
stat_bin2d( mapping = NULL, data = NULL, geom = "tile", position = "identity") + bins = 30 + binwidth = NULL + drop = TRUE +
#plotTransect(mineralKing, grad.var.name='elev_field', crs=crs.utm, grad.axis.title='Elevation (m)', label='pedon_id', color='clay')
#plotTransect(ftc_dat, grad.var.name = 'Def1', grad.axis.title = 'Freeze Thaw', label='season', color = 'Def1')
new.order <- order(ftc_dat$season)
ggplot(ftc_dat, aes(x = def1, y = depth_cm, color = season)) +
stat_bin2d( mapping = NULL, data = NULL, geom = "tile", position = "identity") + bins = 30 + binwidth = NULL + drop = TRUE +
#plotTransect(mineralKing, grad.var.name='elev_field', crs=crs.utm, grad.axis.title='Elevation (m)', label='pedon_id', color='clay')
#plotTransect(ftc_dat, grad.var.name = 'Def1', grad.axis.title = 'Freeze Thaw', label='season', color = 'Def1')
new.order <- order(ftc_dat$season)
ggplot(ftc_dat, aes(x = def1, y = depth_cm, color = season)) +
stat_bin2d( mapping = NULL, data = NULL, geom = "tile", position = "identity") + bins = 30 + binwidth = NULL + drop = TRUE +
#plotTransect(mineralKing, grad.var.name='elev_field', crs=crs.utm, grad.axis.title='Elevation (m)', label='pedon_id', color='clay')
#plotTransect(ftc_dat, grad.var.name = 'Def1', grad.axis.title = 'Freeze Thaw', label='season', color = 'Def1')
#new.order <- order(ftc_dat$season)
#x <- ftc_dat$site=="HEAL"
#par(mar=c(4.5,1,3,1))
#plot(x, color='def1', plot.order=new.order, print.id=FALSE)
# aov-------------------------------------------
ghg_aov1 = aov(data = ghg_csv, gain_ug_per_gOC ~ Site)
ggplot(ftc_dat, aes(x = def1, y = depth_cm, color = season)) +
stat_bin2d( mapping = NULL, data = NULL, geom = "tile", position = "identity") + bins = 30 + binwidth = NULL + drop = TRUE
ggplot(ftc_dat, aes(x = def1, y = depth_cm, color = season)) +
stat_bin2d( mapping = NULL, data = NULL, geom = "tile", position = "identity" + bins = 30 + binwidth = NULL + drop = TRUE)
install.packages("ggridges")
library(ggridges)
ggplot(ftc_dat, aes(x = def1, y = site, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Tail probablity", direction = -1)
ggplot(ftc_dat, aes(x = def1, y = site, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Tail probablity", direction = -1) + facet_grid(season~.)
# ggplot set up-----------------------------------
theme_er <- function() {  # this for all the elements common across plots
theme_bw() %+replace%
theme(legend.position = "top",
legend.key=element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 12),
legend.key.size = unit(1.5, 'lines'),
panel.border = element_rect(color="black",size=2, fill = NA),
plot.title = element_text(hjust = 0.5, size = 14),
plot.subtitle = element_text(hjust = 0.5, size = 12, lineheight = 1.5),
axis.text = element_text(size = 12, color = "black"),
axis.title = element_text(size = 12, face = "bold", color = "black"),
# formatting for facets
panel.background = element_blank(),
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
panel.spacing.y = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold", angle = 270) #facet labels
)
}
ggplot(ftc_dat, aes(x = def1, y = site, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Tail probablity", direction = -1) + theme_er() + facet_grid(season~.)
ggplot(ftc_dat, aes(x = depth_cm, y = site, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Tail probablity", direction = -1) + theme_er() + facet_grid(season~.)
ggplot(ftc_dat, aes(x = depth_cm, y = site, height = def1, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Tail probablity", direction = -1) + theme_er() + facet_grid(season~.)
ggplot(ftc_dat, aes(x = depth_cm, y = site, height = def1)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Tail probablity", direction = -1) + theme_er() + facet_grid(season~.)
ggplot(ftc_dat, aes(x = depth_cm, y = site, height = def1))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Tail probablity", direction = -1) + theme_er() + facet_grid(season~.)
ggplot(ftc_dat, aes(x = depth_cm, y = site, height = def1)) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Tail probablity", direction = -1) + theme_er() + facet_grid(season~.)
ggplot(ftc_dat, aes(x = depth_cm, y = site, height = def1)) +
geom_density_ridges(stat = "identity") + theme_er() + facet_grid(season~.)
ggplot(ftc_dat, aes(x = depth_cm, y = site, height = def1, fill = def1)) +
geom_density_ridges(stat = "identity") + theme_er() + facet_grid(season~.)
ggplot(ftc_dat, aes(x = depth_cm, y = site, height = def1)) +
geom_density_ridges(stat = "identity") + theme_er() + facet_grid(season~.)
ggplot(ftc_dat, aes(x = def1, y = site, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Tail probablity", direction = -1) + theme_er() + scale_x_continuous(limits = c(0, 30)) + facet_grid(season~.)
ggplot(ftc_dat, aes(x = def1, y = site, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Tail probablity", direction = -1) + theme_er() + scale_x_continuous(limits = c(0, 15)) + facet_grid(season~.)
ggplot(ftc_dat, aes(x = def1, y = site, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Tail probablity", direction = -1) + theme_er() + facet_grid(season~.)
ggplot(ftc_dat, aes(x = def1, y = site, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Tail probablity", direction = -1) + theme_er() + scale_x_continuous(limits = c(-5, 30)) + facet_grid(season~.)
ggplot(ftc_dat, aes(x = def1, y = site, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
geom_density_ridges(
jittered_points = TRUE, quantile_lines = TRUE, scale = 0.9, alpha = 0.7,
vline_size = 1, vline_color = "red",
point_size = 0.4, point_alpha = 1,
position = position_raincloud(adjust_vlines = TRUE)
) + theme_er() + scale_x_continuous(limits = c(-5, 30)) + facet_grid(season~.)
ggplot(ftc_dat, aes(x = def1, y = site, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
geom_density_ridges(
jittered_points = TRUE, quantile_lines = TRUE, scale = 0.9, alpha = 0.7,
vline_size = 1, vline_color = "red",
point_size = 0.4, point_alpha = 1,
position = position_raincloud(adjust_vlines = TRUE)
)
ggplot(ftc_dat, aes(x = depth_cm, y = site, fill = def1)) +
geom_raster(hjust = 0, vjust = 0)
ggplot(ftc_dat, aes(x = depth_cm, y = site, fill = def1)) +
geom_raster(hjust = 0, vjust = 0) + theme_er() + facet_grid(season~.)
cars <- ggplot(ftc_dat, aes(depth_cm, factor(site)))
cars + stat_bin2d(aes(fill= after_stat(count)), binwidth = c(3,1))
cars + stat_bin2d(aes(fill= after_stat(count)), binwidth = c(3,1)) + theme_er() + facet_grid(season~.)
# load data---------------------------------
#ghg_csv = read.csv("processed/ghg_ftc.csv")
ghg_csv2 = read.csv("processed/ghg_depth.csv")
ftc_dat = read.csv("processed/FTC_quant_inprocess.csv")
library(dplyr)
library(tidyr)
str(ghg_csv2)
str(ftc_dat)
levels(as.factor(ghg_csv2$trmt))
# ggplot set up-----------------------------------
theme_er <- function() {  # this for all the elements common across plots
theme_bw() %+replace%
theme(legend.position = "top",
legend.key=element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 12),
legend.key.size = unit(1.5, 'lines'),
panel.border = element_rect(color="black",size=2, fill = NA),
plot.title = element_text(hjust = 0.5, size = 14),
plot.subtitle = element_text(hjust = 0.5, size = 12, lineheight = 1.5),
axis.text = element_text(size = 12, color = "black"),
axis.title = element_text(size = 12, face = "bold", color = "black"),
# formatting for facets
panel.background = element_blank(),
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
panel.spacing.y = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold", angle = 270) #facet labels
)
}
library(ggplot2)
library(soilpalettes)
library(soilDB)
library(aqp)
library(sharpshootR)
library(sp)
library(ggridges)
# gain in C ggplot----------------------------------------
ggplot(ghg_csv, aes(x=TRT, y=gain_ug_per_gOC, fill=DAY)) + geom_boxplot()
# gain in C ggplot----------------------------------------
ggplot(ghg_csv2, aes(x=TRT, y=gain_ug_per_gOC, fill=DAY)) + geom_boxplot()
# gain in C ggplot----------------------------------------
ggplot(ghg_csv2, aes(x=trmt, y=gain_ug_g_OC, fill=day)) + geom_boxplot()
# gain in C ggplot----------------------------------------
ggplot(ghg_csv2, aes(x=trmt, y=gain_ug_g_oc, fill=day)) + geom_boxplot()
ggplot(ghg_csv2, aes(x=site, y=gain_ug_g_oc, fill=day)) + geom_boxplot()
ggplot(ghg_csv2, aes(x=day, y=gain_ug_g_oc, fill=site)) + geom_boxplot()
ggplot(ghg_csv, aes(x=day, y=gain_ug_g_oc, fill=site)) + geom_boxplot()
#boxplots
ggplot(ftc_dat, aes(x = def1, y = depth_cm, fill = site)) + geom_boxplot() + theme_er() +
scale_fill_manual (values = soil_palette("gley", 2)) + facet_grid(season~.)
#dotplots failed
ggplot() + geom_dotplot(data = ftc_dat, aes(y = depth_m, x = Def1, color = site)) + theme_er() +
scale_color_manual (values = soil_palette("gley", 2)) + facet_wrap(season~.)
#dotplots failed
ggplot() + geom_dotplot(data = ftc_dat, aes(y = depth_m, x = def1, color = site)) + theme_er() +
scale_color_manual (values = soil_palette("gley", 2)) + facet_wrap(season~.)
ggplot(ftc_dat, aes(x=def1, y=depth_cm, fill=site))
#ridge and grid plots
ggplot(ftc_dat, aes(x = def1, y = depth_cm, color = season)) +
stat_bin2d( mapping = NULL, data = NULL, geom = "tile", position = "identity" + bins = 30 + binwidth = NULL + drop = TRUE)
ggplot(ftc_dat, aes(x = def1, y = site, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Tail probablity", direction = -1) + theme_er() + facet_grid(season~.)
ggplot(ftc_dat, aes(x = def1, y = site, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Tail probablity", direction = -1) + theme_er() + scale_x_continuous(limits = c(-5, 30)) + facet_grid(season~.)
ggplot(ftc_dat, aes(x = def1, y = site, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Tail probablity", direction = -1) + theme_er() + scale_x_continuous(limits = c(-5, 30)) + facet_grid(season~.)
ggplot(ftc_dat, aes(x = depth_cm, y = site, fill = def1)) +
geom_raster(hjust = 0, vjust = 0) + theme_er() + facet_grid(season~.)
cars <- ggplot(ftc_dat, aes(depth_cm, factor(site)))
cars + stat_bin2d(aes(fill= after_stat(count)), binwidth = c(3,1)) + theme_er() + facet_grid(season~.)
ggplot(ftc_dat, aes(x = depth_cm, y = site, height = def1)) +
geom_density_ridges(stat = "identity") + theme_er() + facet_grid(season~.)
ghg_aov1 = aov(data = ghg_csv, gain_ug_per_gOC ~ Site)
ghg_aov1 = aov(data = ghg_csv2, gain_ug_g_oc ~ site)
summary(ghg_aov1)
ghg_aov2 = aov(data = ghg_csv2, gain_ug_g_oc ~ day)
summary(ghg_aov2)
ghg_aov3 = aov(data = ghg_csv2, gain_ug_g_oc ~ site*day)
summary(ghg_aov3)
ggplot(ghg_csv, aes(x=Site, y=ug_12C_g_soil, fill=DAY)) +
geom_boxplot() + theme_er() +
scale_fill_manual (values = soil_palette("redox", 4))
ggplot(ghg_csv2, aes(x=site, y=gain_ug_g_oc, fill=day)) +
geom_boxplot() + theme_er() +
scale_fill_manual (values = soil_palette("redox", 4))
ggplot(ghg_csv2, aes(x=site, y=gain_ug_g_oc, fill=day)) +
geom_boxplot() + theme_er() +
scale_fill_manual (values = soil_palette("redox", 4))
ggplot(ghg_csv2, aes(x = day, y = gain_ug_g_oc, color = day)) +
geom_dotplot() +
xlab("Day") +
ylab("CO2 AVG") +
ggtitle("12C")
